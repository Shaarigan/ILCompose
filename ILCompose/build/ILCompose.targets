<!--
/////////////////////////////////////////////////////////////////////////////////////
//
// ILCompose - Compose partially implementation both .NET language and IL assembler.
// Copyright (c) Kouji Matsui (@kozy_kekyo, @kekyo@mastodon.cloud)
//
// Licensed under Apache-v2: https://opensource.org/licenses/Apache-2.0
//
/////////////////////////////////////////////////////////////////////////////////////
-->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    
  <!-- Common -->
    
  <PropertyGroup>
    <ILComposeBuildEnable Condition="'$(ILComposeBuildEnable)' == ''">True</ILComposeBuildEnable>
    <ILComposeBuildEnableCompose Condition="'$(ILComposeBuildEnableCompose)' == ''">True</ILComposeBuildEnableCompose>
    <ILComposeAdjustAssemblyReferences Condition="'$(ILComposeAdjustAssemblyReferences)' == ''">True</ILComposeAdjustAssemblyReferences>
    <ILComposeBuildLogLevel Condition="'$(ILComposeBuildLogLevel)' == ''">Information</ILComposeBuildLogLevel>
    <ILComposeLaunchDebugger Condition="'$(ILComposeLaunchDebugger)' == ''">false</ILComposeLaunchDebugger>
  </PropertyGroup>

  <!-- Common (internal) -->
    
  <PropertyGroup Condition="('$(MSBuildRuntimeType)' == 'Core') AND ('$(MicrosoftNETBuildTasksTFM)' != '')">
    <_ILCompose_PlatformName>$(MicrosoftNETBuildTasksTFM)</_ILCompose_PlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="('$(MSBuildRuntimeType)' == 'Core') AND ('$(MicrosoftNETBuildTasksTFM)' == '') AND ('$(BundledNETCoreAppTargetFrameworkVersion)' != '')">
    <_ILCompose_PlatformName Condition="$(BundledNETCoreAppTargetFrameworkVersion) &gt;= 5.0">net$(BundledNETCoreAppTargetFrameworkVersion)</_ILCompose_PlatformName>
    <_ILCompose_PlatformName Condition="$(BundledNETCoreAppTargetFrameworkVersion) &lt; 5.0">netcoreapp$(BundledNETCoreAppTargetFrameworkVersion)</_ILCompose_PlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="('$(MSBuildRuntimeType)' == 'Core') AND ('$(MicrosoftNETBuildTasksTFM)' == '') AND ('$(BundledNETCoreAppTargetFrameworkVersion)' == '')">
    <_ILCompose_PlatformName>netcoreapp2.0</_ILCompose_PlatformName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' != 'Core'">
    <_ILCompose_PlatformName>net462</_ILCompose_PlatformName>
  </PropertyGroup>

  <PropertyGroup>
    <_ILCompose_ToolingDir>$([System.IO.Path]::Combine('$(_ILCompose_ScriptBaseDir)','..','tools','$(_ILCompose_PlatformName)'))</_ILCompose_ToolingDir>
  </PropertyGroup>
        
  <!-- ====================================================================== -->

  <!-- Imported from: Microsoft.NET.Sdk.IL.targets
    https://github.com/kekyo/IL2C/issues/100#issuecomment-944294766
    https://github.com/dotnet/runtime/blob/57bfe474518ab5b7cfe6bf7424a79ce3af9d6657/src/coreclr/.nuget/Microsoft.NET.Sdk.IL/targets/Microsoft.NET.Sdk.IL.targets#L29
  -->
    
  <PropertyGroup>
    <_runtime>$(NETCoreSdkPortableRuntimeIdentifier)</_runtime>
    <_runtime Condition="'$(_runtime)' == ''">$(NETCoreSdkRuntimeIdentifier)</_runtime>
    <MicrosoftNetCoreIlasmPackageRuntimeId Condition="'$(MicrosoftNetCoreIlasmPackageRuntimeId)' == ''">$(_runtime)</MicrosoftNetCoreIlasmPackageRuntimeId>
   
    <MicrosoftNETCoreToolingVersion Condition="'$(MicrosoftNETCoreToolingVersion)' == ''">6.0.0</MicrosoftNETCoreToolingVersion>
    <MicrosoftNetCoreIlasmPackageName>runtime.$(MicrosoftNetCoreIlasmPackageRuntimeId).microsoft.netcore.ilasm</MicrosoftNetCoreIlasmPackageName>

    <!-- If ILAsmToolPath is specified, it will be used and no packages will be restored
        Otherwise packages will be restored and ilasm and ildasm will be referenced from their packages.  -->
    <_ILCompose_ILAsmCommandDir Condition="'$(ILAsmToolPath)' != ''">$([MSBuild]::NormalizeDirectory($(ILAsmToolPath)))</_ILCompose_ILAsmCommandDir>
    <CoreCompileDependsOn Condition="'$(ILAsmToolPath)' == ''">$(CoreCompileDependsOn);ResolveIlAsmToolPaths</CoreCompileDependsOn>
  </PropertyGroup>
  <ItemGroup Condition="'$(ILAsmToolPath)' == ''">
    <_ILCompose_ILAsmCommandPackageReference Include="$(MicrosoftNetCoreIlasmPackageName)" Version="$(MicrosoftNETCoreToolingVersion)" />
    <!-- Made NuGet package referrer likes:
        For windows x64: runtime.win-x64.Microsoft.NETCore.ILAsm
        For linux x64: runtime.linux-x64.Microsoft.NETCore.ILAsm
    -->
    <PackageReference Include="@(_ILCompose_ILAsmCommandPackageReference)" ExcludeAssets="all" PrivateAssets="all" />
  </ItemGroup>
  <Target Name="ResolveIlAsmToolPaths">
    <ItemGroup>
        <_ILCompose_ILAsmCommandPackageReference NativePath="$(NuGetPackageRoot)\%(Identity)\%(Version)\runtimes\$(MicrosoftNetCoreIlasmPackageRuntimeId)\native" />
        <_IlasmSourceFiles Include="%(_ILCompose_ILAsmCommandPackageReference.NativePath)\**\*" />
    </ItemGroup>
    <Error Condition="!Exists('%(_ILCompose_ILAsmCommandPackageReference.NativePath)')" Text="Package %(_ILCompose_ILAsmCommandPackageReference.Identity)\%(_ILCompose_ILAsmCommandPackageReference.Version) was not restored" />
    <PropertyGroup>
        <_ILCompose_ILAsmCommandDir Condition="'$(_ILCompose_ILAsmCommandDir)' == '' and '%(_ILCompose_ILAsmCommandPackageReference.Identity)' == '$(MicrosoftNetCoreIlasmPackageName)'">%(_ILCompose_ILAsmCommandPackageReference.NativePath)/</_ILCompose_ILAsmCommandDir>
        <!-- Resolved final tooling path -->
        <_ILCompose_ILAsmCommandPath>$([System.IO.Path]::Combine('$(_ILCompose_ILAsmCommandDir)','ilasm'))</_ILCompose_ILAsmCommandPath>
    </PropertyGroup>
  </Target>
        
  <!-- ====================================================================== -->

  <Target Name="ILComposeBuildTarget" AfterTargets="Compile" DependsOnTargets="$(ILComposeDependsOnTargets)"
    Condition="'$(ILComposeBuildEnable)' == 'True'">
    <CallTarget Targets="ILComposePrepare; ILComposeAssembleIL; ILComposeBuild" />
  </Target>
    
  <Target Name="ILComposePrepare">
    <ItemGroup>
      <!-- Maybe `IntermediateAssembly` is only one file. -->
      <_ILCompose_PrimaryAssembly Include="@(IntermediateAssembly->'%(FullPath)')" />
      <_ILCompose_ReferenceAssembly Include="@(IntermediateAssembly->'%(RootDir)%(Directory)%(Filename)_il.dll')" />
      <_ILCompose_CachedPrimaryAssembly Include="@(IntermediateAssembly->'%(RootDir)%(Directory)%(Filename)_cached.dll')" />
    </ItemGroup>
  </Target>
    
  <Target Name="ILComposeAssembleIL"
    Inputs="@(ILComposeTargetIL)"
    Outputs="@(_ILCompose_ReferenceAssembly)">
    <PropertyGroup>
      <_ILCompose_ILAsmCommand>&quot;$(_ILCompose_ILAsmCommandPath)&quot; -nologo -quite -debug -pdbfmt=portable -dll -output=@(_ILCompose_ReferenceAssembly->'&quot;%(FullPath)&quot;',' ')</_ILCompose_ILAsmCommand>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Optimize)' == 'true'">
      <_ILCompose_ILAsmCommand>$(_ILCompose_ILAsmCommand) -optimize</_ILCompose_ILAsmCommand>
    </PropertyGroup>
    <Exec Command="$(_ILCompose_ILAsmCommand) @(ILComposeTargetIL->'&quot;%(FullPath)&quot;',' ')" />
    <Message Importance="normal" Text="ILCompose: CIL source code assembled. Output=@(_ILCompose_ReferenceAssembly->'%(FullPath)')" />
    <ItemGroup>
      <FileWrites Include="@(_ILCompose_ReferenceAssembly)" />
    </ItemGroup>
  </Target>

  <Target Name="ILComposeBuild"
    Inputs="@(_ILCompose_CachedPrimaryAssembly);@(_ILCompose_ReferenceAssembly)"
    Outputs="@(_ILCompose_PrimaryAssembly)"
    Condition="$(ILComposeBuildEnableCompose)">
    <_ILCompose_GetCombinedReferencesBasePath References="@(ReferencePath)">
      <Output TaskParameter="CombinedReferencesBasePath" PropertyName="_ILCompose_CombinedReferencesBasePath" />
    </_ILCompose_GetCombinedReferencesBasePath>
    <PropertyGroup>
      <ILComposeBuildToolingRuntimeName Condition="'$(ILComposeBuildToolingRuntimeName)' == ''">$(_ILCompose_RuntimeName)</ILComposeBuildToolingRuntimeName>
      <ILComposeBuildToolingDir Condition="'$(ILComposeBuildToolingDir)' == ''">$([System.IO.Path]::GetFullPath('$(_ILCompose_ToolingDir)'))</ILComposeBuildToolingDir>
      <ILComposeBuildToolingPath Condition="'$(ILComposeBuildToolingPath)' == ''">$([System.IO.Path]::Combine('$(ILComposeBuildToolingDir)','$(_ILCompose_ExecutableName)'))</ILComposeBuildToolingPath>
      <_ILCompose_CombinedReferenceBasePathOption>--refs=&quot;$(_ILCompose_CombinedReferencesBasePath)&quot;</_ILCompose_CombinedReferenceBasePathOption>
      <_ILCompose_AdjustAssemblyReferencesOption Condition="$(ILComposeAdjustAssemblyReferences)">--adjustAssemblyRefs</_ILCompose_AdjustAssemblyReferencesOption>
      <_ILCompose_BuildLogLevelOption>--logLevel=$(ILComposeBuildLogLevel) --logtfm=&quot;$(TargetFramework)&quot;</_ILCompose_BuildLogLevelOption>
      <_ILCompose_LaunchDebuggerOption Condition="$(ILComposeLaunchDebugger)">--launchDebugger</_ILCompose_LaunchDebuggerOption>
      <_ILCompose_Options>$(_ILCompose_BuildLogLevelOption) $(_ILCompose_LaunchDebuggerOption) $(_ILCompose_CombinedReferenceBasePathOption) $(_ILCompose_AdjustAssemblyReferencesOption)</_ILCompose_Options>
    </PropertyGroup>
    <Exec WorkingDirectory="$(ILComposeBuildToolingDir)"
        Command="$(ILComposeBuildToolingRuntimeName)&quot;$(ILComposeBuildToolingPath)&quot; $(_ILCompose_Options) @(_ILCompose_PrimaryAssembly->'&quot;%(FullPath)&quot;',' ') @(_ILCompose_ReferenceAssembly->'&quot;%(FullPath)&quot;',' ')" />
    <ItemGroup>
      <FileWrites Include="$(_ILCompose_PrimaryAssembly)" />
    </ItemGroup>
  </Target>
</Project>
